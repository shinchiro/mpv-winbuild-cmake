#!/bin/bash
PROG=@CMAKE_INSTALL_PREFIX@/bin/@clang_compiler@
FLAGS="$FLAGS -target @TARGET_CPU@-pc-windows-gnu"
FLAGS="$FLAGS --sysroot @MINGW_INSTALL_PREFIX@"
FLAGS="$FLAGS -fuse-ld=lld --ld-path=@TARGET_ARCH@-ld"
FLAGS="$FLAGS -Wno-unused-command-line-argument"
FLAGS="$FLAGS -fno-auto-import -fno-temp-file"
FLAGS="$FLAGS -D_WIN32_WINNT=0x0A00 -DWINVER=0x0A00 -DNDEBUG -D__CRT__NO_INLINE"
FLAGS="$FLAGS -fno-builtin-sin -fno-builtin-sinf -fno-builtin-cos -fno-builtin-cosf -fno-builtin-sinl -fno-builtin-cosl"

if [ "@TARGET_CPU@" == "aarch64" ]; then
    ARCH_FLAGS="-mcpu=@GCC_ARCH@"
else
    ARCH_FLAGS="-march=@GCC_ARCH@"
fi

if [ "$CONF" == "1" ]; then
    SKIP_OPT="-g0 -O0 -fno-lto -fno-data-sections -fno-function-sections"
else
    FLAGS="$FLAGS -mguard=cf -gcodeview -gno-codeview-command-line -O3 -fsized-deallocation -fnew-infallible -faligned-allocation -fstrict-flex-arrays=3 -fno-math-errno -fno-signed-zeros -fno-trapping-math -ffp-contract=fast -fomit-frame-pointer -fdata-sections -fno-stack-protector -fdata-sections -fslp-vectorize -ftree-vectorize -fvectorize"
    if [ "@ENABLE_CCACHE@" == "ON" ]; then
        CCACHE="ccache"
    fi
    if [ "$GC" != "0" ]; then
        FLAGS="$FLAGS -ffunction-sections"
    fi
    if [ "@GCC_ARCH_HAS_AVX@" == "ON" ]; then
        FLAGS="$FLAGS -Wa,-msse2avx -mno-vzeroupper"
        if [ "@GCC_ARCH_HAS_AVX512@" != "ON" ]; then
            FLAGS="$FLAGS -mno-gather"
        fi
    fi
    if [ "$HIDE" == "1" ]; then
        FLAGS="$FLAGS -fvisibility-from-dllstorageclass -fvisibility-dllexport=hidden"
    fi
    if [ "$NO_DEBUG" != "1" ]; then
        FLAGS="$FLAGS -gline-tables-only -fdebug-info-for-profiling"
    fi
    if [ "$LTO" != "0" ] && [ "@CLANG_PACKAGES_LTO@" == "ON" ]; then
        LTO_FLAGS="-flto=thin"
        if [ "@LLD_LTO_ALL_THREADS@" == "ON" ] && [ "$LTO_JOB" != "1" ]; then
            LTO_FLAGS="$LTO_FLAGS -flto-jobs=@CPU_COUNT@"
        fi
    fi
    if [ "@LLVM_ENABLE_PGO@" == "GEN" ] || [ "@LLVM_ENABLE_PGO@" == "CSGEN" ]; then
        export LLVM_PROFILE_FILE="@LLVM_PROFILE_DATA_DIR@/clang-%m.profraw" #enable profraw output only when CONF!=1
    fi
fi

$CCACHE "$PROG" $LTO_FLAGS $ARCH_FLAGS "$@" $FLAGS @CLANG_FLAGS@ $SKIP_OPT
